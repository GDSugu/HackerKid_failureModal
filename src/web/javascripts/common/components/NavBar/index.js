import React, { useContext } from 'react';
import { FormattedMessage } from 'react-intl';
// import { FormattedMessage } from 'react-intl';
import { Link, useLocation, Outlet } from 'react-router-dom';
import { SubscriptionContext, useGetSession } from '../../../../../hooks/pages/root';
import Img from '../Img';

const NavItem = (props) => {
  const { icon, route, active } = props;
  return <>
    <Link to={route} className={`navigation-item ${active ? 'active' : ''}`}>
      <div className="nav-icon">
        {icon}
      </div>
      <div className="nav-bar"></div>
    </Link>
  </>;
};

const NavBar = () => {
  const { pathname } = useLocation();
  const routes = pathname.split('/');
  const screen = routes[1];
  const isPageMounted = React.useRef(true);
  const { session } = useGetSession({ sessionAttr: ['profileLink'], isPageMounted });

  const { subscriptionData } = useContext(SubscriptionContext);

  const navItems = [
    {
      icon: <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke='#212427' xmlns="http://www.w3.org/2000/svg">
        <path d="M3 9L12 2L21 9V20C21 20.5304 20.7893 21.0391 20.4142 21.4142C20.0391 21.7893 19.5304 22 19 22H5C4.46957 22 3.96086 21.7893 3.58579 21.4142C3.21071 21.0391 3 20.5304 3 20V9Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
        <path d="M9 22V12H15V22" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
      </svg>,
      route: '/dashboard',
      active: screen === 'dashboard',
    },
    {
      icon: <svg width="24" height="24" stroke="#212527" viewBox="0 0 24 18" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M9 15L6.032 17.968C5.70167 18.2983 5.28084 18.5232 4.8227 18.6143C4.36457 18.7054 3.88971 18.6586 3.45815 18.4799C3.0266 18.3011 2.65773 17.9984 2.39819 17.6101C2.13864 17.2217 2.00007 16.7651 2 16.298V15L3.357 8.216C3.53824 7.30922 4.02806 6.49325 4.74312 5.90691C5.45817 5.32058 6.35429 5.0001 7.279 5H16.721C17.6457 5.0001 18.5418 5.32058 19.2569 5.90691C19.9719 6.49325 20.4618 7.30922 20.643 8.216L22 15V16.297C21.9999 16.7641 21.8614 17.2207 21.6018 17.6091C21.3423 17.9974 20.9734 18.3001 20.5418 18.4789C20.1103 18.6576 19.6354 18.7044 19.1773 18.6133C18.7192 18.5222 18.2983 18.2973 17.968 17.967L15 15H9Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
        <path d="M9 5L10 7H14L15 5" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
      </svg>,
      route: '/games',
      active: ['games', 'turtle', 'codekata'].indexOf(screen) !== -1,
    },
    {
      icon: <svg width="24" height="24" viewBox="24 24 24 24" fill="none" stroke="#212527" xmlns="http://www.w3.org/2000/svg">
        <path d="M41 26L36 31L31 26M28 31H44C45.1046 31 46 31.8954 46 33V44C46 45.1046 45.1046 46 44 46H28C26.8954 46 26 45.1046 26 44V33C26 31.8954 26.8954 31 28 31Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
      </svg>,
      route: '/courses',
      active: ['courses', 'videos'].indexOf(screen) !== -1,
    },
    {
      icon: <svg width="24" height="24" viewBox="24 24 24 24" fill="none" stroke="#212527" xmlns="http://www.w3.org/2000/svg">
        <path d="M36 26L39.09 32.26L46 33.27L41 38.14L42.18 45.02L36 41.77L29.82 45.02L31 38.14L26 33.27L32.91 32.26L36 26Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
      </svg>,
      route: '/challenges',
      active: screen === 'challenges',
    },
    {
      icon: <svg width="24" height="24" viewBox="24 24 24 24" fill="none" stroke="#212527" xmlns="http://www.w3.org/2000/svg">
        <path d="M27 36H45M27 30H45M27 42H45" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
      </svg>,
      route: '/more',
      active: ['more', 'certificates', 'awards', 'collectibles'].includes(screen),
    },
  ];

  React.useEffect(() => () => {
    isPageMounted.current = false;
  }, []);

  return <>
    <nav>
      <div className='row justify-content-between align-items-center no-gutters'>
        <div className='d-flex align-items-center'>
          <Link to='/dashboard'>
            <div className="logo">
              {/* <FormattedMessage
              defaultMessage = 'hackerkid logo'
              description={'logo'}
              /> */}
              <svg width="150" height="26" viewBox="0 0 158 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M14.888 2.24768C15.0598 1.92541 15.3499 1.69982 15.7581 1.57091C16.1663 1.442 16.6819 1.37755 17.305 1.37755C17.928 1.37755 18.4222 1.43126 18.7874 1.53869C19.1527 1.64611 19.432 1.77502 19.6253 1.92541C19.8187 2.0758 19.9691 2.29065 20.0765 2.56995C20.1839 2.93519 20.2376 3.4938 20.2376 4.24576V22.1318C20.2376 22.6259 20.2162 23.0019 20.1732 23.2597C20.1517 23.4961 20.055 23.7754 19.8831 24.0976C19.5824 24.6777 18.7445 24.9678 17.3694 24.9678C15.8655 24.9678 14.9846 24.5703 14.7268 23.7754C14.5979 23.4101 14.5335 22.8515 14.5335 22.0996V15.5575H5.99328V22.1318C5.99328 22.6259 5.97179 23.0019 5.92882 23.2597C5.90734 23.4961 5.81066 23.7754 5.63878 24.0976C5.33799 24.6777 4.50009 24.9678 3.12507 24.9678C1.62114 24.9678 0.740262 24.5703 0.482446 23.7754C0.353537 23.4101 0.289083 22.8515 0.289083 22.0996V4.21353C0.289083 3.71939 0.299826 3.35415 0.32131 3.11781C0.36428 2.86 0.471703 2.56995 0.643581 2.24768C0.944367 1.66759 1.78227 1.37755 3.15729 1.37755C4.66122 1.37755 5.55284 1.77502 5.83214 2.56995C5.93956 2.93519 5.99328 3.4938 5.99328 4.24576V10.8201H14.5335V4.21353C14.5335 3.71939 14.5442 3.35415 14.5657 3.11781C14.6086 2.86 14.7161 2.56995 14.888 2.24768ZM33.8445 9.82105C33.9734 8.6179 34.8221 8.01633 36.3905 8.01633C37.2284 8.01633 37.8514 8.08078 38.2596 8.20969C38.6678 8.3386 38.9471 8.56419 39.0975 8.88646C39.2694 9.20873 39.3661 9.49878 39.3876 9.75659C39.4305 9.99292 39.452 10.3582 39.452 10.8523V22.1318C39.452 22.6259 39.4305 23.0019 39.3876 23.2597C39.3661 23.4961 39.2802 23.7754 39.1298 24.0976C38.829 24.6562 38.0878 24.9355 36.9061 24.9355C35.7459 24.9355 34.9617 24.7959 34.5535 24.5166C34.1668 24.2158 33.9412 23.7861 33.8767 23.2275C33.0818 24.3662 31.7498 24.9355 29.8806 24.9355C28.0329 24.9355 26.3141 24.0869 24.7243 22.3896C23.1344 20.6923 22.3395 18.7265 22.3395 16.4921C22.3395 14.2362 23.1344 12.2703 24.7243 10.5945C26.3356 8.8972 28.0974 8.04856 30.0095 8.04856C30.74 8.04856 31.406 8.17747 32.0076 8.43528C32.6092 8.6931 33.0281 8.94017 33.2644 9.1765C33.5008 9.39135 33.6941 9.6062 33.8445 9.82105ZM27.9792 16.5243C27.9792 17.2333 28.2585 17.8778 28.8171 18.4579C29.3757 19.0165 30.0525 19.2958 30.8474 19.2958C31.6423 19.2958 32.2976 19.0058 32.8133 18.4257C33.3504 17.8456 33.6189 17.2118 33.6189 16.5243C33.6189 15.8153 33.3611 15.16 32.8455 14.5584C32.3513 13.9569 31.6746 13.6561 30.8152 13.6561C29.9773 13.6561 29.2898 13.9569 28.7526 14.5584C28.237 15.16 27.9792 15.8153 27.9792 16.5243ZM47.3381 16.5243C47.3381 17.4266 47.6389 18.1356 48.2405 18.6513C48.842 19.1454 49.4758 19.3925 50.1419 19.3925C50.8294 19.3925 51.4632 19.1991 52.0433 18.8124C52.6448 18.4042 53.1282 18.2001 53.4935 18.2001C54.138 18.2001 54.9222 18.7694 55.846 19.9081C56.3402 20.5312 56.5873 21.0898 56.5873 21.5839C56.5873 22.4003 55.9964 23.1631 54.8148 23.8721C53.5902 24.7314 52.0862 25.1611 50.303 25.1611C48.3049 25.1611 46.382 24.4414 44.5343 23.0019C43.6535 22.3144 42.9337 21.4013 42.3751 20.2626C41.8165 19.1024 41.5372 17.8348 41.5372 16.4598C41.5372 15.0633 41.8165 13.8065 42.3751 12.6893C42.9337 11.5506 43.6535 10.6375 44.5343 9.94995C46.3176 8.53196 48.219 7.82297 50.2385 7.82297C51.055 7.82297 51.8499 7.94113 52.6233 8.17747C53.3968 8.39231 53.9661 8.60716 54.3314 8.82201L54.847 9.14428C55.2337 9.40209 55.5345 9.6062 55.7494 9.75659C56.308 10.1863 56.5873 10.6804 56.5873 11.239C56.5873 11.7762 56.3617 12.3885 55.9105 13.076C55.1371 14.2576 54.3958 14.8485 53.6868 14.8485C53.2786 14.8485 52.6985 14.6121 51.9466 14.1395C51.5598 13.7742 51.0012 13.5916 50.2708 13.5916C49.5618 13.5916 48.8957 13.8494 48.2727 14.3651C47.6496 14.8807 47.3381 15.6004 47.3381 16.5243ZM68.6596 16.4921L72.9458 20.037C73.4829 20.4882 73.8159 20.832 73.9448 21.0683C74.0952 21.3046 74.1704 21.5302 74.1704 21.7451C74.1704 22.2607 73.8374 22.959 73.1714 23.8398C72.4409 24.7422 71.7964 25.1934 71.2377 25.1934C70.7651 25.1934 70.1098 24.8818 69.2719 24.2588L68.9496 24.0332C68.4555 23.625 67.6928 22.916 66.6615 21.9062C65.6302 20.8749 64.846 20.1445 64.3089 19.7148V22.1962C64.3089 22.6904 64.2874 23.0664 64.2445 23.3242C64.223 23.5605 64.1263 23.8398 63.9544 24.1621C63.6751 24.7207 62.848 25 61.4729 25C60.1194 25 59.2922 24.71 58.9915 24.1299C58.8411 23.8076 58.7444 23.5283 58.7014 23.292C58.6799 23.0341 58.6692 22.6582 58.6692 22.164V2.86C58.6692 2.36585 58.6799 2.00061 58.7014 1.76428C58.7444 1.50646 58.8411 1.21642 58.9915 0.894145C59.2922 0.314058 60.1301 0.0240138 61.5052 0.0240138C62.5364 0.0240138 63.2669 0.206634 63.6966 0.571875C64.0619 0.872661 64.2552 1.34532 64.2767 1.98987C64.2982 2.18323 64.3089 2.48401 64.3089 2.89222V13.1082C64.6957 12.7859 65.2757 12.2381 66.0492 11.4646C66.8441 10.6912 67.435 10.1433 67.8217 9.82105L68.2084 9.56323C68.9604 8.98314 69.6049 8.6931 70.142 8.6931C70.6791 8.6931 71.2915 9.13353 71.979 10.0144C72.688 10.8738 73.0425 11.5506 73.0425 12.0447C73.0425 12.5389 72.645 13.119 71.8501 13.785L68.6596 16.4921ZM91.3429 14.494C91.3429 15.8045 91.0099 16.7821 90.3439 17.4266C89.6993 18.0497 88.9796 18.3612 88.1847 18.3612H80.5468C80.5468 18.9628 80.9013 19.4677 81.6103 19.8759C82.3193 20.2841 83.0283 20.4882 83.7373 20.4882C84.9834 20.4882 85.961 20.3593 86.67 20.1015L87.0245 19.9726C87.5401 19.7362 87.9698 19.6181 88.3136 19.6181C89.0011 19.6181 89.5919 20.1015 90.0861 21.0683C90.3654 21.6484 90.505 22.1425 90.505 22.5507C90.505 24.4629 88.2169 25.419 83.6406 25.419C82.0508 25.419 80.6328 25.1504 79.3867 24.6133C78.162 24.0547 77.206 23.3242 76.5185 22.4218C75.1649 20.6816 74.4882 18.7372 74.4882 16.5887C74.4882 13.8817 75.3583 11.7224 77.0986 10.1111C78.8603 8.47825 81.0517 7.66183 83.6729 7.66183C86.6593 7.66183 88.8507 8.71458 90.2472 10.8201C90.9777 11.9373 91.3429 13.1619 91.3429 14.494ZM84.543 15.4286C85.3594 15.4286 85.7676 15.0848 85.7676 14.3973C85.7676 13.9031 85.5743 13.5057 85.1875 13.2049C84.8223 12.9041 84.2852 12.7537 83.5762 12.7537C82.8887 12.7537 82.2012 13.0438 81.5137 13.6238C80.8261 14.1824 80.4824 14.784 80.4824 15.4286H84.543ZM104.983 8.20969C105.391 8.3386 105.724 8.56419 105.982 8.88646C106.261 9.18725 106.401 9.68139 106.401 10.3689C106.401 11.0564 106.197 11.8084 105.788 12.6248C105.38 13.4412 104.789 13.8494 104.016 13.8494C103.629 13.8494 103.253 13.7635 102.888 13.5916C102.544 13.4197 102.082 13.3338 101.502 13.3338C100.922 13.3338 100.374 13.5379 99.8587 13.9461C99.3645 14.3543 99.1174 14.8485 99.1174 15.4286V22.1962C99.1174 22.6904 99.096 23.0664 99.053 23.3242C99.0315 23.5605 98.9348 23.8398 98.7629 24.1621C98.4407 24.7207 97.6028 25 96.2492 25C95.218 25 94.4767 24.8174 94.0256 24.4521C93.6818 24.1514 93.4884 23.6894 93.4455 23.0664C93.4455 22.8515 93.4455 22.54 93.4455 22.1318V10.8201C93.4455 10.3259 93.4562 9.9607 93.4777 9.72436C93.5207 9.46655 93.6174 9.18725 93.7677 8.88646C94.0685 8.30637 94.9064 8.01633 96.2815 8.01633C97.5705 8.01633 98.3762 8.2634 98.6985 8.75755C98.9348 9.10131 99.053 9.45581 99.053 9.82105C99.1604 9.67065 99.3108 9.48803 99.5042 9.27319C99.719 9.05834 100.159 8.76829 100.825 8.40305C101.492 8.03781 102.072 7.85519 102.566 7.85519C103.081 7.85519 103.511 7.88742 103.855 7.95187C104.199 7.99484 104.575 8.08078 104.983 8.20969Z" fill="#212527" />
                <path d="M118.294 13.1404C121.581 16.2987 123.912 18.6728 125.287 20.2626C125.996 21.0576 126.35 21.7343 126.35 22.2929C126.35 22.83 125.921 23.4746 125.061 24.2266C124.202 24.957 123.493 25.3223 122.934 25.3223C122.397 25.3223 121.742 24.8711 120.968 23.9687L113.878 15.8797V22.164C113.878 22.6797 113.857 23.0556 113.814 23.292C113.793 23.5283 113.696 23.8076 113.524 24.1299C113.223 24.71 112.385 25 111.01 25C109.506 25 108.625 24.5918 108.368 23.7754C108.239 23.4316 108.174 22.8838 108.174 22.1318V4.21353C108.174 3.71939 108.185 3.35415 108.206 3.11781C108.249 2.86 108.357 2.56995 108.529 2.24768C108.83 1.66759 109.667 1.37755 111.042 1.37755C112.546 1.37755 113.438 1.77502 113.717 2.56995C113.825 2.93519 113.878 3.4938 113.878 4.24576V10.4011C116.8 7.11397 119.164 4.41764 120.968 2.31214C121.72 1.43126 122.376 0.990825 122.934 0.990825C123.493 0.990825 124.202 1.36681 125.061 2.11877C125.921 2.84925 126.35 3.4938 126.35 4.0524C126.35 4.58952 126.028 5.23406 125.384 5.98602C124.137 7.4255 122.204 9.40209 119.583 11.9158L118.294 13.1404ZM128.757 4.21353C128.757 3.71939 128.768 3.35415 128.789 3.11781C128.832 2.86 128.939 2.56995 129.111 2.24768C129.412 1.66759 130.25 1.37755 131.625 1.37755C133.129 1.37755 134.021 1.77502 134.3 2.56995C134.407 2.93519 134.461 3.4938 134.461 4.24576V22.164C134.461 22.6797 134.44 23.0556 134.397 23.292C134.375 23.5283 134.278 23.8076 134.106 24.1299C133.806 24.71 132.968 25 131.593 25C130.089 25 129.208 24.5918 128.95 23.7754C128.821 23.4316 128.757 22.8838 128.757 22.1318V4.21353ZM139.902 1.34532L145.864 1.37755C148.979 1.37755 151.719 2.5055 154.082 4.76139C156.445 6.9958 157.627 9.75659 157.627 13.0438C157.627 16.3094 156.467 19.1132 154.146 21.455C151.848 23.7969 149.055 24.9678 145.767 24.9678H139.87C138.559 24.9678 137.743 24.6992 137.421 24.1621C137.163 23.7109 137.034 23.0234 137.034 22.0996V4.18131C137.034 3.66567 137.045 3.28969 137.066 3.05336C137.109 2.81703 137.216 2.53773 137.388 2.21546C137.689 1.63537 138.527 1.34532 139.902 1.34532ZM145.864 19.2636C147.411 19.2636 148.807 18.6942 150.054 17.5555C151.3 16.3954 151.923 14.9452 151.923 13.2049C151.923 11.4646 151.31 10.0144 150.086 8.85423C148.883 7.67257 147.465 7.08174 145.832 7.08174H142.738V19.2636H145.864Z" fill="white" />
              </svg>
            </div>
          </Link>
          {
            subscriptionData && subscriptionData.planType === 'premium' && <div className='premium-badge'>
              <Img src='common/premium-crown.svg' type='svg' className='crown' />
              <span className='caption-bold premium-text'>
                <FormattedMessage defaultMessage={'PREMIUM'} description='premium text' />
              </span>
            </div>
          }
        </div>
        <div className='navigation-container row align-items-center no-gutters'>
          {
            navItems.map((item, index) => <NavItem {...item} key={index} />)
          }
        </div>
        <div className="profileImg">
          <Link to='/profile'>
            <Img
              src={session?.profileLink || 'common/profile.png'}
              local={(session?.profileLink === undefined || session?.profileLink === null || session?.profileLink === '')}
              alt="Hackerkid User" />
            {
              subscriptionData && subscriptionData.planType === 'premium'
              && <div className='gradient-box'>
                <div className='premium-profile-badge'>
                  <Img src='common/premium-crown.svg' type='svg' className='crown' />
                </div>
              </div>
            }
          </Link>
        </div>
      </div>
    </nav>
    <Outlet />
  </>;
};

export default NavBar;
