@import '../../../christmas/_default.js';

@mixin spread-map($map: (), $cssMap: $cssvars) {
  @each $key,
    $value in $map {

    $key: map-get($cssMap, $key);

    #{$key}: $value;
  }
}

@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }

  @return $map;
}

@mixin populate-theme($light: $thememaplight, $dark: $thememapdark, $cssVars: $cssvars) {
  :root.light {
    @include spread-map($light, $cssVars);
  }

  :root.dark {
    @include spread-map($dark, $cssVars);
  }
}

/*
  Returns a CSS variable property specific to themeing.
  Accepts an optional fallback, and optional map.
  - SCSS: color: theme-var($theme-primary, blue)
  - CSS:  color: var(--theme-primary, blue)
  Throws error if the variable not part of the map
*/
@function theme-var($key, $fallback: null, $map: $thememaplight, $cssVars: $cssvars) {
  @if not map-has-key($map, $key) {
    @error "key: #{$key}, is not a key in map: #{$map}";
  }

  $key: map-get($cssVars, $key);

  @if ($fallback) {
    @return var($key, $fallback);
  }

  @else {
    @return var($key);
  }
}

//body
$body-color: theme-var(text-color-2);
