$thememaplight : (
  'text-color-1': #fff,
  'text-color-2': #212527,
  'text-color-3': #5b5b5b,
  'text-color-4': #c4c4c4,
  'text-color-5': #a9abac,
  'text-color-6': #e0e0e0,
  'nav-bg-blue': #0051ff,
  'nav-bg-green': #24aa70,
  'nav-bg-lightBlue': #00baff,
  'nav-bg-red': #ff423d,
  'nav-bg-yellow': #ffbc04,
  'body-bg-blue': #e9ebff,
  'body-bg-green': #e5f4ed,
  'body-bg-lightBlue': #dff8fe,
  'body-bg-red': #ffecf0,
  'body-bg-yellow': #fff7e1,
);
// just copied the light theme colors to the dark for now
// TODO: make this a real dark theme with appropriate colors
$thememapdark : (
  'text-color-1': #fff,
  'text-color-2': #212527,
  'text-color-3': #5b5b5b,
  'text-color-4': #c4c4c4,
  'text-color-5': #a9abac,
  'text-color-6': #e0e0e0,
  'nav-bg-blue': #0051ff,
  'nav-bg-green': #24aa70,
  'nav-bg-lightBlue': #00baff,
  'nav-bg-red': #ff423d,
  'nav-bg-yellow': #ffbc04,
  'body-bg-blue': #e9ebff,
  'body-bg-green': #e5f4ed,
  'body-bg-lightBlue': #dff8fe,
  'body-bg-red': #ffecf0,
  'body-bg-yellow': #fff7e1,
);

$cssvars : (
  'text-color-1': '--text-color-1',
  'text-color-2': '--text-color-2',
  'text-color-3': '--text-color-3',
  'text-color-4': '--text-color-4',
  'text-color-5': '--text-color-5',
  'text-color-6': '--text-color-6',
  'nav-bg-blue': '--nav-bg-blue',
  'nav-bg-green': '--nav-bg-green',
  'nav-bg-lightBlue': '--nav-bg-lightblue',
  'nav-bg-red': '--nav-bg-red',
  'nav-bg-yellow': '--nav-bg-yellow',
  'body-bg-blue': '--body-bg-blue',
  'body-bg-green': '--body-bg-green',
  'body-bg-lightBlue': '--body-bg-lightblue',
  'body-bg-red': '--body-bg-red',
  'body-bg-yellow': '--body-bg-yellow',
);

@mixin spread-map($map: (), $cssMap: $cssvars) {
  @each $key,
    $value in $map {

    $key: map-get($cssMap, $key);

    #{$key}: $value;
  }
}

@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }

  @return $map;
}

@mixin populate-theme($light: $thememaplight, $dark: $thememapdark, $cssVars: $cssvars) {
  :root.light {
    @include spread-map($light, $cssVars);
  }

  :root.dark {
    @include spread-map($dark, $cssVars);
  }
}

/*
  Returns a CSS variable property specific to themeing.
  Accepts an optional fallback, and optional map.
  - SCSS: color: theme-var($theme-primary, blue)
  - CSS:  color: var(--theme-primary, blue)
  Throws error if the variable not part of the map
*/
@function theme-var($key, $fallback: null, $map: $thememaplight, $cssVars: $cssvars) {
  @if not map-has-key($map, $key) {
    @error "key: #{$key}, is not a key in map: #{$map}";
  }

  $key: map-get($cssVars, $key);

  @if ($fallback) {
    @return var($key, $fallback);
  }

  @else {
    @return var($key);
  }
}
